/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package baseconverter;

import java.awt.Image;
import java.math.BigInteger;
import javax.swing.ImageIcon;

/**
 *
 * @author huany
 */
public class BaseConverterFrame extends javax.swing.JFrame {

    String dec = "";
    String bi = "";
    String hex = "";
    

    /**
     * Creates new form BaseConverterFrame
     */
    public BaseConverterFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BinaryField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Calc = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        HexaField = new javax.swing.JTextField();
        DecimalField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 450));
        setSize(new java.awt.Dimension(900, 600));

        BinaryField.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        BinaryField.setText("0");
        BinaryField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BinaryFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 48)); // NOI18N
        jLabel1.setText("Amazing Base Converter");

        Calc.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        Calc.setText("Convert");
        Calc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalcActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel2.setText("Binary");

        jLabel3.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel3.setText("Decimal");

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 36)); // NOI18N
        jLabel4.setText("Hexadecimal");

        HexaField.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        HexaField.setText("0");

        DecimalField.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        DecimalField.setText("0");
        DecimalField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DecimalFieldActionPerformed(evt);
            }
        });

        jPanel2.setLayout(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\huany\\Downloads\\FinalFinalMeme.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BinaryField)
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DecimalField, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HexaField, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Calc, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(44, 44, 44))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 19, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(Calc, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BinaryField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DecimalField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(HexaField, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BinaryFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BinaryFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BinaryFieldActionPerformed

    private void DecimalFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DecimalFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DecimalFieldActionPerformed

    private void CalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalcActionPerformed
        dec = DecimalField.getText();
        bi = BinaryField.getText();
        hex = HexaField.getText();
       
        if (!bi.equals("0")) {
            dec = BaseToDec(bi, "2");
            hex = decToBase(dec, "16");
            DecimalField.setText(dec);
            HexaField.setText(hex);
            BinaryField.setEnabled(false); //prevents people from entering new numbers once game is over, allows them to do so again after new game
            DecimalField.setEnabled(false);
            HexaField.setEnabled(false);
            Calc.setEnabled(false);}
        else if (!dec.equals("0")) {
            bi = decToBase(dec, "2");
            hex = decToBase(dec, "16");
            BinaryField.setText(bi);
            HexaField.setText(hex);
            BinaryField.setEnabled(false); //prevents people from entering new numbers once game is over, allows them to do so again after new game
            DecimalField.setEnabled(false);
            HexaField.setEnabled(false);
            Calc.setEnabled(false);
        }
        else if (!hex.equals("0")) {
            dec = BaseToDec(hex, "16");
            bi = decToBase(dec, "2");
            BinaryField.setText(bi);
            DecimalField.setText(dec);
            BinaryField.setEnabled(false); //prevents people from entering new numbers once game is over, allows them to do so again after new game
            DecimalField.setEnabled(false);
            HexaField.setEnabled(false);
            Calc.setEnabled(false);
        }
    }//GEN-LAST:event_CalcActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        dec.equals("");
        bi.equals("");
        hex.equals("");
        BinaryField.setText("0");
        DecimalField.setText("0");
        HexaField.setText("0");
        BinaryField.setEnabled(true); //prevents people from entering new numbers once game is over, allows them to do so again after new game
        DecimalField.setEnabled(true);
        HexaField.setEnabled(true);
        Calc.setEnabled(true);

    }//GEN-LAST:event_ClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseConverterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseConverterFrame().setVisible(true);
            }
        });
    }

    static String BaseToDec(String input, String base) {
        int a = input.toString().length();
        String digits[] = new String[a];
        int IntDigits[] = new int[a];
        for (int i = 0; i < a; i++) {
            digits[i] = input.substring(i, i + 1);
        }
        for (int i = 0; i < a; i++) {
            if (Character.isLetter(input.charAt(i)) == true) {
                char b;
                b = input.charAt(i);
                int c = b - 55;
                IntDigits[i] = c;

            } else {
                IntDigits[i] = Integer.parseInt(digits[i]);
            }
        }
        BigInteger result1 = BigInteger.valueOf(0);
        BigInteger BigBase = BigInteger.valueOf(0);
        BigBase = BigBase.add(new BigInteger(base));
        for (int i = 0; i < a; i++) {
            result1 = result1.add(BigBase.pow(a - i - 1).multiply(BigInteger.valueOf(IntDigits[i])));
        }
        String result = result1.toString();
        return result;
    }

    static int findLength(BigInteger b, BigInteger base) {
        int i = 0;
        while (true) {
            if (base.pow(i).compareTo(b) > 0) {

                break;
            } else {
                i++;
            }
        }
        return i;
    }

    static String decToBase(String num1, String base1) {
        BigInteger base = BigInteger.valueOf(0);
        base = base.add(new BigInteger(base1));
        BigInteger num = BigInteger.valueOf(0);
        num = num.add(new BigInteger(num1));
        String result = "";
        int length = findLength(num, base);
        for (int i1 = 1; i1 <= length; i1++) {
            BigInteger a1 = num.divide(base.pow(length - i1));
            int a = a1.intValue();
            if (a > 9) {
                char e = (char) a;
                e += 55;
                result += e;
            } else {
                result += Integer.toString(a);
            }
            num = num.subtract(a1.multiply(base.pow(length - i1)));
        }
        return result;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BinaryField;
    private javax.swing.JButton Calc;
    private javax.swing.JButton Clear;
    private javax.swing.JTextField DecimalField;
    private javax.swing.JTextField HexaField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
